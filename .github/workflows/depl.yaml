name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
env:
  GAR_LOCATION: asia-southeast1 # TODO: update region of the Artifact Registry
  REPO_NAME: ticketing-docker-hub

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: "auth"
        name: Set up Cloud SDK
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
          service_account: "github-actions-deployer@ticketing-429002.iam.gserviceaccount.com"

      - name: Access Token Verification
        run: echo ${{steps.auth.outputs.access_token}}

      - name: Docker configuration
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}

      # - name: Build Docker images
      #   run: |
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/auth:latest ./auth
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/client:latest ./client
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/expiration:latest ./expiration
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/orders:latest ./orders
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/payments:latest ./payments
      #     docker build -t $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/tickets:latest ./tickets

      # - name: Push Docker images to Google Container Registry
      #   run: |
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/auth:latest
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/client:latest
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/expiration:latest
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/orders:latest
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/payments:latest
      #     docker push $GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/tickets:latest

      # - name: Configure kubectl
      #   run: |
      #     echo ${{ secrets.GCP_SA_KEY }} > ${HOME}/gcloud-service-key.json
      #     gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      #     gcloud --quiet config set project ${{ secrets.GCP_PROJECT }}
      #     gcloud --quiet config set compute/region ${{ secrets.GCP_REGION }}
      #     gcloud --quiet container clusters get-credentials ${{ secrets.GKE_CLUSTER }}

      - name: Deploy to GKE
        run:
          kubectl apply -f infra/k8s/prod/auth-depl.yaml
          # kubectl apply -f infra/k8s/prod/auth-mongo-depl.yaml
          # kubectl apply -f infra/k8s/prod/client-depl.yaml
          # kubectl apply -f infra/k8s/prod/expiration-depl.yaml
          # kubectl apply -f infra/k8s/prod/expiration-redis-depl.yaml
          # kubectl apply -f infra/k8s/prod/ingress-srv.yaml
          # kubectl apply -f infra/k8s/prod/nats-depl.yaml
          # kubectl apply -f infra/k8s/prod/orders-depl.yaml
          # kubectl apply -f infra/k8s/prod/orders-mongo-depl.yaml
          # kubectl apply -f infra/k8s/prod/payments-depl.yaml
          # kubectl apply -f infra/k8s/prod/payments-mongo-depl.yaml
          # kubectl apply -f infra/k8s/prod/tickets-depl.yaml
          # kubectl apply -f infra/k8s/prod/tickets-mongo-depl.yaml
          # # kubectl set image deployment/auth-depl auth=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/auth:latest
          # # kubectl set image deployment/client-depl client=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/client:latest
          # # kubectl set image deployment/expiration-depl expiration=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/expiration:latest
          # # kubectl set image deployment/orders-depl orders=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/orders:latest
          # # kubectl set image deployment/payments-depl payments=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/payments:latest
          # # kubectl set image deployment/tickets-depl tickets=$GAR_LOCATION-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/$REPO_NAME/tickets:latest
